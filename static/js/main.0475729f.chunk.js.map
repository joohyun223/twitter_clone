{"version":3,"sources":["components/Navigation.js","fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["Navigation","userObj","style","display","justifyContent","marginTop","to","marginRight","icon","faTwitter","color","size","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","firebaseConfig","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","REACT_APP_MESSAGIN_ID","appId","firebase","initializeApp","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","ok","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","src","class","faTrash","faPencilAlt","NweetFactory","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onload","finishedEvent","result","currentTarget","Boolean","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","orderBy","onSnapshot","snapshot","nweetArray","docs","map","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","updateProfile","signOut","push","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","App","init","setInit","setIsLoggedIn","setUserObj","onAuthStateChanged","user","args","currentUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0475729f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({userObj})=> {\r\n    return(\r\n        <nav>\r\n            <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n                <li>\r\n                    <Link to=\"/\" style={{ marginRight: 10 }}>\r\n                        <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n                    </Link>\r\n                </li>\r\n                <li>\r\n                    <Link\r\n                        to=\"/profile\"\r\n                        style={{\r\n                            marginLeft: 10,\r\n                            display: \"flex\",\r\n                            flexDirection: \"column\",\r\n                            alignItems: \"center\",\r\n                            fontSize: 12,\r\n                        }}\r\n                    >\r\n                        <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n                        <span style={{ marginTop: 10 }}>\r\n                            {userObj.displayName\r\n                                ? `${userObj.displayName}의 Profile`\r\n                                : \"Profile\"}\r\n                        </span>\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navigation;","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN ,\r\n    projectId: process.env.REACT_APP_PROJECT_ID ,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET ,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID ,\r\n    appId: process.env.REACT_APP_APP_ID \r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\n//서비스만 export \r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();\r\n","import { authService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const onChange = (event) => {\r\n        const { target: { name, value } } = event;\r\n\r\n        if (name === \"email\") {\r\n            setEmail(value);\r\n        } else if (name === \"password\") {\r\n            setPassword(value);\r\n        }\r\n    };\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            let data;\r\n            if (newAccount) {\r\n                // create account\r\n                data = await authService.createUserWithEmailAndPassword(email, password);\r\n            } else {\r\n                // log in\r\n                data = await authService.signInWithEmailAndPassword(email, password);\r\n            }\r\n            console.log(data);\r\n        } catch (err) {\r\n            setError(err.message);\r\n        }\r\n    };\r\n\r\n    const toggleAccount = () => setAccount((prev) => !prev);\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit} className=\"container\">\r\n                <input name=\"email\" type=\"email\" placeholder=\"Email\" required value={email} onChange={onChange} className=\"authInput\"></input>\r\n                <input name=\"password\" type=\"password\" placeholder=\"Password\" required value={password} onChange={onChange} className=\"authInput\"></input>\r\n                <input type=\"submit\" value={newAccount ? \"create account\" : \"log in\"} className=\"authInput authSubmit\" ></input>\r\n                {error && <span className=\"authError\">{error}</span>}\r\n            </form>\r\n            <span onClick={toggleAccount} className=\"authSwitch\">\r\n                {newAccount ? \"Sign in\" : \"Create Account\"}\r\n            </span>\r\n        </>\r\n    )\r\n}\r\nexport default AuthForm;","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n    faTwitter,\r\n    faGoogle,\r\n    faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport { authService, firebaseInstance } from \"fbase\";\r\nimport AuthForm from \"components/AuthForm\";\r\n\r\nconst Auth = () => {\r\n    const onSocialClick = async (event) => {\r\n        const {\r\n            target: { name },\r\n        } = event;\r\n        let provider;\r\n        if (name === \"google\") {\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        } else if (name === \"github\") {\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n        await authService.signInWithPopup(provider);\r\n    };\r\n    return (\r\n        <div className=\"authContainer\">\r\n            <FontAwesomeIcon\r\n                icon={faTwitter}\r\n                color={\"#04AAFF\"}\r\n                size=\"3x\"\r\n                style={{ marginBottom: 30 }}\r\n            />\r\n            <AuthForm />\r\n            <div className=\"authBtns\">\r\n                <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n                    Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n                </button>\r\n                <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n                    Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Auth;","import { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({nweetObj , isOwner})=>{\r\n    //수정모드\r\n    const [editing, setEditing] = useState(false);\r\n    //텍스트 업데이트\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n\r\n    const onDeleteClick = async ()=>{\r\n        const ok = window.confirm('Are you sure you want to delete this nweet?');\r\n        console.log(ok);\r\n        if(ok){\r\n            //delete nweet\r\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n            await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n        }\r\n    };\r\n    const toggleEditing = ()=> setEditing((prev)=>!prev);\r\n    const onSubmit = async (event)=>{\r\n        event.preventDefault();\r\n        await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n            text : newNweet,\r\n        })\r\n        setEditing(false);\r\n    }\r\n    const onChange = (event)=>{\r\n        const {\r\n            target: {value},\r\n        } = event;\r\n        setNewNweet(value);\r\n    }\r\n    return(\r\n        <div className=\"nweet\">\r\n            {editing ? (\r\n                <>\r\n                    {isOwner &&\r\n                        <>\r\n                            <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                                <input placeholder=\"수정내용\" value={newNweet} required autoFocus onChange={onChange} className=\"formInput\"/>\r\n                                <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\r\n                            </form>\r\n                        <span onClick={toggleEditing} className=\"formBtn cancelBtn\">Cancel</span>\r\n                        </>\r\n                    }\r\n                </>\r\n            ) : (\r\n                    <button>\r\n                        <h4>{nweetObj.text}</h4>\r\n                        {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\r\n                        {isOwner && (\r\n                            <div class=\"nweet__actions\">\r\n                                <span onClick={onDeleteClick}>\r\n                                    <FontAwesomeIcon icon={faTrash} />\r\n                                </span>\r\n                                <span onClick={toggleEditing}>\r\n                                    <FontAwesomeIcon icon={faPencilAlt} />\r\n                                </span>\r\n                            </div>\r\n                        )}\r\n                    </button>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Nweet;","import { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({userObj})=>{\r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        \r\n        if (nweet === \"\") {\r\n            return;\r\n        }\r\n        let attachmentUrl = \"\";\r\n        if (attachment !== \"\") {\r\n            const attachmentRef = storageService\r\n                .ref()\r\n                .child(`${userObj.uid}/${uuidv4()}`);\r\n            const response = await attachmentRef.putString(attachment, \"data_url\");\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        const nweetObj = {\r\n            text: nweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl,\r\n        };\r\n        await dbService.collection(\"nweets\").add(nweetObj);\r\n        setNweet(\"\");\r\n        setAttachment(\"\");\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        const { target: { value } } = event;\r\n\r\n        setNweet(value);\r\n    };\r\n\r\n    const onFileChange = (event) => {\r\n        const { target: { files },\r\n        } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onload = (finishedEvent) => {\r\n            const { currentTarget: { result } } = finishedEvent\r\n            setAttachment(result);\r\n        }\r\n        if (Boolean(theFile)) {\r\n            reader.readAsDataURL(theFile);\r\n        }\r\n    };\r\n\r\n    const onClearAttachment = () => setAttachment(\"\");\r\n\r\n    return (\r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n            <div className=\"factoryInput__container\">\r\n                <input\r\n                    className=\"factoryInput__input\"\r\n                    value={nweet}\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    placeholder=\"What's on your mind?\"\r\n                    maxLength={120}\r\n                />\r\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n            </div>\r\n            <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\r\n                <span>Add photos</span>\r\n                <FontAwesomeIcon icon={faPlus} />\r\n            </label>\r\n            <input id=\"attach-file\"\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={onFileChange}\r\n                style={{\r\n                    opacity: 0,\r\n                }} />\r\n            {attachment &&\r\n                <div className=\"factoryForm__attachment\">\r\n                    <img\r\n                        src={attachment}\r\n                        style={{\r\n                            backgroundImage: attachment,\r\n                        }}\r\n                    />\r\n                    <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n                        <span>Remove</span>\r\n                        <FontAwesomeIcon icon={faTimes} />\r\n                    </div>\r\n                </div>\r\n            }\r\n\r\n        </form>\r\n    );\r\n\r\n};\r\nexport default NweetFactory;","import Nweet from 'components/Nweet';\r\nimport NweetFactory from 'components/NweetFactory';\r\nimport { dbService } from 'fbase';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nconst Home = ({userObj})=>{\r\n    const [nweets, setNweets] = useState([]);\r\n\r\n    // 컴포넌트가 화면에 나타날 때\r\n    useEffect(() => {\r\n        //realtime listener\r\n        dbService\r\n        .collection(\"nweets\")\r\n        .orderBy(\"createdAt\", \"desc\")\r\n        .onSnapshot((snapshot)=>{\r\n            const nweetArray = snapshot.docs.map(doc => ({\r\n                id: doc.id,\r\n                ...doc.data(),\r\n            }));\r\n            setNweets(nweetArray);\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <NweetFactory userObj={userObj}/>\r\n            <div style={{ marginTop: 30 }}>\r\n                {nweets.map(nweet =>\r\n                (\r\n                    <Nweet key={nweet.id} nweetObj={nweet} isOwner={nweet.creatorId === userObj.uid} />   \r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Home;","import { authService } from 'fbase';\r\nimport React, {useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport default ({refreshUser, userObj}) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName ] = useState(userObj.displayName);\r\n\r\n    const onLogoutClick = ()=> {\r\n        authService.signOut();\r\n        history.push('/');\r\n    }\r\n\r\n    const onChange = (event)=>{\r\n        const {\r\n            target: {value},\r\n        } = event;\r\n        setNewDisplayName(value);\r\n    }\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if(userObj.displayName != newDisplayName){\r\n            await userObj.updateProfile({\r\n                displayName: newDisplayName,\r\n            });\r\n            refreshUser();\r\n        }\r\n    };  \r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={onSubmit} className=\"profileForm\">\r\n                <input\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    autoFocus\r\n                    placeholder=\"Display name\"\r\n                    value={newDisplayName}\r\n                    className=\"formInput\"\r\n                />\r\n                <input\r\n                    type=\"submit\"\r\n                    value=\"Update Profile\"\r\n                    className=\"formBtn\"\r\n                    style={{\r\n                        marginTop: 10,\r\n                    }}\r\n                />\r\n            </form>\r\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogoutClick}>Log Out</span>\r\n        </div>\r\n    ) \r\n}","import React from 'react';\r\nimport {HashRouter as Router, Redirect, Route, Switch} from 'react-router-dom' \r\nimport Navigation from \"components/Navigation\"\r\nimport Auth from \"routes/Auth\"\r\nimport Home from 'routes/Home';\r\nimport Profile from 'routes/Profile';\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj} />}\r\n            <Switch>\r\n                <>\r\n                {isLoggedIn ? (\r\n                    <div\r\n                        style={{\r\n                            maxWidth: 890,\r\n                            width: \"100%\",\r\n                            margin: \"0 auto\",\r\n                            marginTop: 80,\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                        }}\r\n                    >\r\n                        <Route exact path=\"/\">\r\n                            <Home userObj={userObj} />\r\n                        </Route>\r\n                        <Route exact path=\"/profile\">\r\n                            <Profile userObj={userObj} refreshUser={refreshUser} />\r\n                        </Route>\r\n                    </div>\r\n                ) : (\r\n                        <>\r\n                            <Route exact path=\"/\">\r\n                                <Auth />\r\n                            </Route>\r\n                        </>\r\n                    )}\r\n                </>\r\n            </Switch>\r\n        </Router>\r\n    );\r\n};\r\nexport default AppRouter;","import React,  {useEffect, useState} from 'react';\nimport AppRouter from 'components/Router';\nimport { authService } from \"fbase\"\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n\n  useEffect(()=>{\n    //firebase 초기화 여부 (로그인/로그아웃 시 trigger)\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setIsLoggedIn(true);\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setIsLoggedIn(false);\n        setUserObj(null);\n      }\n      setInit(true);\n    })\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  }\n\n  return (\n    <>\n    {init ? <AppRouter refreshUser={refreshUser} isLoggedIn={isLoggedIn} userObj={userObj} /> : \"Initializing...\"}\n    </>\n  )\n}\n\nexport default App; \n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport \"./styles.css\";\n \nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}