[{"C:\\Users\\MVPC10216\\Desktop\\sandbox\\리액트 테스트\\twitter_clone\\src\\index.js":"1","C:\\Users\\MVPC10216\\Desktop\\sandbox\\리액트 테스트\\twitter_clone\\src\\components\\App.js":"2","C:\\Users\\MVPC10216\\Desktop\\sandbox\\리액트 테스트\\twitter_clone\\src\\components\\Router.js":"3","C:\\Users\\MVPC10216\\Desktop\\sandbox\\리액트 테스트\\twitter_clone\\src\\fbase.js":"4","C:\\Users\\MVPC10216\\Desktop\\sandbox\\리액트 테스트\\twitter_clone\\src\\routes\\Home.js":"5","C:\\Users\\MVPC10216\\Desktop\\sandbox\\리액트 테스트\\twitter_clone\\src\\routes\\Auth.js":"6","C:\\Users\\MVPC10216\\Desktop\\sandbox\\리액트 테스트\\twitter_clone\\src\\components\\Navigation.js":"7","C:\\Users\\MVPC10216\\Desktop\\sandbox\\리액트 테스트\\twitter_clone\\src\\routes\\Profile.js":"8","C:\\Users\\MVPC10216\\Desktop\\sandbox\\리액트 테스트\\twitter_clone\\src\\components\\Nweet.js":"9","C:\\Users\\MVPC10216\\Desktop\\sandbox\\리액트 테스트\\twitter_clone\\src\\components\\NweetFactory.js":"10","C:\\Users\\MVPC10216\\Desktop\\sandbox\\리액트 테스트\\twitter_clone\\src\\components\\AuthForm.js":"11"},{"size":230,"mtime":1611042786701,"results":"12","hashOfConfig":"13"},{"size":1141,"mtime":1610610047156,"results":"14","hashOfConfig":"13"},{"size":1562,"mtime":1611898738170,"results":"15","hashOfConfig":"13"},{"size":720,"mtime":1610349101692,"results":"16","hashOfConfig":"13"},{"size":1083,"mtime":1611900397224,"results":"17","hashOfConfig":"13"},{"size":1506,"mtime":1611043392672,"results":"18","hashOfConfig":"13"},{"size":1523,"mtime":1611042670314,"results":"19","hashOfConfig":"13"},{"size":1619,"mtime":1611305395267,"results":"20","hashOfConfig":"13"},{"size":2729,"mtime":1611898505882,"results":"21","hashOfConfig":"13"},{"size":3369,"mtime":1611900421831,"results":"22","hashOfConfig":"13"},{"size":1956,"mtime":1611043034433,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"ib4msq",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"C:\\Users\\MVPC10216\\Desktop\\sandbox\\리액트 테스트\\twitter_clone\\src\\index.js",[],["53","54"],"C:\\Users\\MVPC10216\\Desktop\\sandbox\\리액트 테스트\\twitter_clone\\src\\components\\App.js",[],"C:\\Users\\MVPC10216\\Desktop\\sandbox\\리액트 테스트\\twitter_clone\\src\\components\\Router.js",["55"],"C:\\Users\\MVPC10216\\Desktop\\sandbox\\리액트 테스트\\twitter_clone\\src\\fbase.js",[],["56","57"],"C:\\Users\\MVPC10216\\Desktop\\sandbox\\리액트 테스트\\twitter_clone\\src\\routes\\Home.js",[],"C:\\Users\\MVPC10216\\Desktop\\sandbox\\리액트 테스트\\twitter_clone\\src\\routes\\Auth.js",[],["58","59"],"C:\\Users\\MVPC10216\\Desktop\\sandbox\\리액트 테스트\\twitter_clone\\src\\components\\Navigation.js",[],"C:\\Users\\MVPC10216\\Desktop\\sandbox\\리액트 테스트\\twitter_clone\\src\\routes\\Profile.js",["60","61"],"import { authService } from 'fbase';\r\nimport React, {useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport default ({refreshUser, userObj}) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName ] = useState(userObj.displayName);\r\n\r\n    const onLogoutClick = ()=> {\r\n        authService.signOut();\r\n        history.push('/');\r\n    }\r\n\r\n    const onChange = (event)=>{\r\n        const {\r\n            target: {value},\r\n        } = event;\r\n        setNewDisplayName(value);\r\n    }\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if(userObj.displayName != newDisplayName){\r\n            await userObj.updateProfile({\r\n                displayName: newDisplayName,\r\n            });\r\n            refreshUser();\r\n        }\r\n    };  \r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={onSubmit} className=\"profileForm\">\r\n                <input\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    autoFocus\r\n                    placeholder=\"Display name\"\r\n                    value={newDisplayName}\r\n                    className=\"formInput\"\r\n                />\r\n                <input\r\n                    type=\"submit\"\r\n                    value=\"Update Profile\"\r\n                    className=\"formBtn\"\r\n                    style={{\r\n                        marginTop: 10,\r\n                    }}\r\n                />\r\n            </form>\r\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogoutClick}>Log Out</span>\r\n        </div>\r\n    ) \r\n}",["62","63"],"C:\\Users\\MVPC10216\\Desktop\\sandbox\\리액트 테스트\\twitter_clone\\src\\components\\Nweet.js",["64"],"C:\\Users\\MVPC10216\\Desktop\\sandbox\\리액트 테스트\\twitter_clone\\src\\components\\NweetFactory.js",["65"],"import { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({userObj})=>{\r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        \r\n        if (nweet === \"\") {\r\n            return;\r\n        }\r\n        let attachmentUrl = \"\";\r\n        if (attachment !== \"\") {\r\n            const attachmentRef = storageService\r\n                .ref()\r\n                .child(`${userObj.uid}/${uuidv4()}`);\r\n            const response = await attachmentRef.putString(attachment, \"data_url\");\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        const nweetObj = {\r\n            text: nweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl,\r\n        };\r\n        await dbService.collection(\"nweets\").add(nweetObj);\r\n        setNweet(\"\");\r\n        setAttachment(\"\");\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        const { target: { value } } = event;\r\n\r\n        setNweet(value);\r\n    };\r\n\r\n    const onFileChange = (event) => {\r\n        const { target: { files },\r\n        } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onload = (finishedEvent) => {\r\n            const { currentTarget: { result } } = finishedEvent\r\n            setAttachment(result);\r\n        }\r\n        if (Boolean(theFile)) {\r\n            reader.readAsDataURL(theFile);\r\n        }\r\n    };\r\n\r\n    const onClearAttachment = () => setAttachment(\"\");\r\n\r\n    return (\r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n            <div className=\"factoryInput__container\">\r\n                <input\r\n                    className=\"factoryInput__input\"\r\n                    value={nweet}\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    placeholder=\"What's on your mind?\"\r\n                    maxLength={120}\r\n                />\r\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n            </div>\r\n            <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\r\n                <span>Add photos</span>\r\n                <FontAwesomeIcon icon={faPlus} />\r\n            </label>\r\n            <input id=\"attach-file\"\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={onFileChange}\r\n                style={{\r\n                    opacity: 0,\r\n                }} />\r\n            {attachment &&\r\n                <div className=\"factoryForm__attachment\">\r\n                    <img\r\n                        src={attachment}\r\n                        style={{\r\n                            backgroundImage: attachment,\r\n                        }}\r\n                    />\r\n                    <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n                        <span>Remove</span>\r\n                        <FontAwesomeIcon icon={faTimes} />\r\n                    </div>\r\n                </div>\r\n            }\r\n\r\n        </form>\r\n    );\r\n\r\n};\r\nexport default NweetFactory;","C:\\Users\\MVPC10216\\Desktop\\sandbox\\리액트 테스트\\twitter_clone\\src\\components\\AuthForm.js",[],["66","67"],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":2,"column":31,"nodeType":"74","messageId":"75","endLine":2,"endColumn":39},{"ruleId":"68","replacedBy":"76"},{"ruleId":"70","replacedBy":"77"},{"ruleId":"68","replacedBy":"78"},{"ruleId":"70","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":5,"column":1,"nodeType":"82","endLine":53,"endColumn":2},{"ruleId":"83","severity":1,"message":"84","line":22,"column":32,"nodeType":"85","messageId":"86","endLine":22,"endColumn":34},{"ruleId":"68","replacedBy":"87"},{"ruleId":"70","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":52,"column":52,"nodeType":"91","endLine":52,"endColumn":88},{"ruleId":"89","severity":1,"message":"90","line":83,"column":21,"nodeType":"91","endLine":88,"endColumn":23},{"ruleId":"68","replacedBy":"92"},{"ruleId":"70","replacedBy":"93"},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar",["94"],["95"],["94"],["95"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["94"],["95"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["94"],["95"],"no-global-assign","no-unsafe-negation"]